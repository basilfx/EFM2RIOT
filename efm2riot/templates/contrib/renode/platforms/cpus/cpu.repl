{% macro getIndex(peripheral) %}{{ (peripheral.name|search("(\d+)$")).0 }}{% endmacro %}

{% strip 2, "<" %}
    {% for peripheral in svd|select(name='^I2C\d+$') %}
        i2c{{ getIndex(peripheral) }}: I2C.EFM32GGI2CController @ sysbus <{{ peripheral.base_address|hex(8) }}, +{{ peripheral.address_block.size|hex }}>
            -> nvic@{{ peripheral.interrupts.0.value }}
    {% endfor %}
{% endstrip %}

{% strip 2, "<" %}
    {%- for peripheral in svd|select(name='^TIMER\d+$') %}
        timer{{ getIndex(peripheral) }}: Timers.Efm32Timer @ sysbus <{{ peripheral.base_address|hex(8) }}, +{{ peripheral.address_block.size|hex }}>
            -> nvic@{{ peripheral.interrupts.0.value }}
    {% endfor %}
{% endstrip %}

{% strip 2, "<" %}
    {%- for peripheral in svd|select(name='^UART\d+$') %}
        uart{{ getIndex(peripheral) }}: UART.EFM32_UART @ sysbus <{{ peripheral.base_address|hex(8) }}, +{{ peripheral.address_block.size|hex }}>
            ReceiveIRQ -> nvic@{{ peripheral.interrupts.0.value }}
            {% strip 2 %}
                {% if peripheral.interrupts|length > 1 %}
                    TransmitIRQ -> nvic@{{ peripheral.interrupts.1.value }}
                {% endif %}
            {% endstrip %}
    {% endfor %}
{% endstrip %}

{% strip 2, "<" %}
    {%- for peripheral in svd|select(name='^USART\d+$') %}
        usart{{ getIndex(peripheral) }}: UART.EFM32_UART @ sysbus <{{ peripheral.base_address|hex(8) }}, +{{ peripheral.address_block.size|hex }}>
            ReceiveIRQ -> nvic@{{ peripheral.interrupts.0.value }}
            {% strip 2 %}
                {% if peripheral.interrupts|length > 1 %}
                    TransmitIRQ -> nvic@{{ peripheral.interrupts.1.value }}
                {% endif %}
            {% endstrip %}
    {% endfor %}
{% endstrip %}

{% strip 2, "<" %}
    {%- for peripheral in svd|select(name='^LEUART\d+$') %}
        leUart{{ getIndex(peripheral) }}: UART.LEUART @ sysbus <{{ peripheral.base_address|hex(8) }}, +{{ peripheral.address_block.size|hex }}>
            -> nvic@{{ peripheral.interrupts.0.value }}
    {% endfor %}
{% endstrip %}

{% strip 3, "<" %}
    {% with peripheral=svd|find(name='GPIO') %}
        {% if peripheral %}
            {% strip 2 %}
                {% if cpu_series == 0 %}
                    gpioPort: GPIOPort.EFMGPIOPort @ sysbus {{ peripheral.base_address|hex(8) }}
                {% else %}
                    gpioPort: GPIOPort.EFR32_GPIOPort @ sysbus {{ peripheral.base_address|hex(8) }}
                        EvenIRQ -> nvic@{{ peripheral.interrupts.0.value }}
                        OddIRQ -> nvic@{{ peripheral.interrupts.1.value }}
                {% endif %}
            {% endstrip %}
        {% endif %}
    {% endwith %}
{% endstrip %}

bitband: Miscellaneous.BitBanding @ sysbus <0x42000000, +0x2000000>
    peripheralBase: 0x40000000

sram: Memory.MappedMemory @ sysbus {{ sram_base|hex(8) }}
    size: {{ sram_size|hex(8) }}

flash: Memory.MappedMemory @ sysbus {{ flash_base|hex(8) }}
    size: {{ flash_size|hex(8) }}

nvic: IRQControllers.NVIC @ sysbus 0xE000E000
    IRQ -> cpu@0

cpu: CPU.CortexM @ sysbus
    nvic: nvic
    cpuType: "cortex-{{ architecture_short }}"

deviceInformation: {{ family|upper }}DeviceInformation @ sysbus {{ devinfo_base|hex(8) }}
    deviceNumber: 1
    flashSize: {{ flash_size // 1024 }}
    sramSize: {{ sram_size // 1024 }}

sysbus:
    init:
        {% strip 2 %}
            {% for peripheral in svd %}
                Tag <{{ peripheral.base_address|hex(8) }},{{ (peripheral.base_address + peripheral.address_block.size - 1)|hex(8) }}> "{{ peripheral.name }}"
            {% endfor %}
        {% endstrip %}
        Tag <{{ sram_base|hex(8) }},{{ (sram_base + sram_size - 1)|hex(8) }}> "SRAM"
        Tag <{{ flash_base|hex(8) }},{{ (flash_base + flash_size - 1)|hex(8) }}> "FLASH"

cmuStatusOscillator: Python.PythonPeripheral @ sysbus 0x400C802C
    size: 0x4
    initable: false
    script: "request.value = 0xFFFFFFFF"

vcmpStatus: Python.PythonPeripheral @ sysbus 0x40000008
    size: 0x4
    initable: false
    script: "request.value = 0xFFFFFFFF"
