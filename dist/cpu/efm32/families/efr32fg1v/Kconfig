# Copyright (c) 2020 HAW Hamburg
#
# This file is subject to the terms and conditions of the GNU Lesser
# General Public License v2.1. See the file LICENSE in the top level
# directory for more details.

config CPU_FAM_EFR32FG1V
    bool
    select CPU_CORE_CORTEX_M4F
    select CPU_COMMON_EFM32

## CPU Models
config CPU_MODEL_EFR32FG1V131F32GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V131F128GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V131F64GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V132F128GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V232F256GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V132F32GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V132F256GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V132F64GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V131F256GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V131F256GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V032F128GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V132F64GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V132F256GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V132F32GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V132F128GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V232F256GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V131F64GM48
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V131F32GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V032F256GM32
    bool
    select CPU_FAM_EFR32FG1V

config CPU_MODEL_EFR32FG1V131F128GM32
    bool
    select CPU_FAM_EFR32FG1V

## Common CPU symbols
config CPU_FAM
    default "efr32fg1v" if CPU_FAM_EFR32FG1V

config CPU_MODEL
    default "efr32fg1v131f32gm48"  if CPU_MODEL_EFR32FG1V131F32GM48
    default "efr32fg1v131f128gm48" if CPU_MODEL_EFR32FG1V131F128GM48
    default "efr32fg1v131f64gm32"  if CPU_MODEL_EFR32FG1V131F64GM32
    default "efr32fg1v132f128gm32" if CPU_MODEL_EFR32FG1V132F128GM32
    default "efr32fg1v232f256gm32" if CPU_MODEL_EFR32FG1V232F256GM32
    default "efr32fg1v132f32gm32"  if CPU_MODEL_EFR32FG1V132F32GM32
    default "efr32fg1v132f256gm32" if CPU_MODEL_EFR32FG1V132F256GM32
    default "efr32fg1v132f64gm48"  if CPU_MODEL_EFR32FG1V132F64GM48
    default "efr32fg1v131f256gm48" if CPU_MODEL_EFR32FG1V131F256GM48
    default "efr32fg1v131f256gm32" if CPU_MODEL_EFR32FG1V131F256GM32
    default "efr32fg1v032f128gm32" if CPU_MODEL_EFR32FG1V032F128GM32
    default "efr32fg1v132f64gm32"  if CPU_MODEL_EFR32FG1V132F64GM32
    default "efr32fg1v132f256gm48" if CPU_MODEL_EFR32FG1V132F256GM48
    default "efr32fg1v132f32gm48"  if CPU_MODEL_EFR32FG1V132F32GM48
    default "efr32fg1v132f128gm48" if CPU_MODEL_EFR32FG1V132F128GM48
    default "efr32fg1v232f256gm48" if CPU_MODEL_EFR32FG1V232F256GM48
    default "efr32fg1v131f64gm48"  if CPU_MODEL_EFR32FG1V131F64GM48
    default "efr32fg1v131f32gm32"  if CPU_MODEL_EFR32FG1V131F32GM32
    default "efr32fg1v032f256gm32" if CPU_MODEL_EFR32FG1V032F256GM32
    default "efr32fg1v131f128gm32" if CPU_MODEL_EFR32FG1V131F128GM32
